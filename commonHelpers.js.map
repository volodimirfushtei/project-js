{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const viewport = document.querySelector('.cover-section');\n\n  function isInViewport(element) {\n    const rect = element.getBoundingClientRect();\n    return (\n      rect.top < window.innerHeight &&\n      rect.left < window.innerWidth &&\n      rect.bottom > 0 &&\n      rect.right > 0\n    );\n  }\n\n  function checkScroll() {\n    if (isInViewport(viewport)) {\n      viewport.classList.add('scrolling');\n    } else {\n      viewport.classList.remove('scrolling');\n    }\n  }\n\n  // Debounce function to limit the rate at which checkScroll is called\n  function debounce(func, wait) {\n    let timeout;\n    return function (...args) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n  }\n\n  // Attach debounced checkScroll to the scroll event\n  window.addEventListener('scroll', debounce(checkScroll, 100));\n\n  // Initial check in case the element is already in viewport\n  checkScroll();\n});\n"],"names":["viewport","isInViewport","element","rect","checkScroll","debounce","func","wait","timeout","args"],"mappings":"ssBAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMA,EAAW,SAAS,cAAc,gBAAgB,EAExD,SAASC,EAAaC,EAAS,CAC7B,MAAMC,EAAOD,EAAQ,wBACrB,OACEC,EAAK,IAAM,OAAO,aAClBA,EAAK,KAAO,OAAO,YACnBA,EAAK,OAAS,GACdA,EAAK,MAAQ,CAEhB,CAED,SAASC,GAAc,CACjBH,EAAaD,CAAQ,EACvBA,EAAS,UAAU,IAAI,WAAW,EAElCA,EAAS,UAAU,OAAO,WAAW,CAExC,CAGD,SAASK,EAASC,EAAMC,EAAM,CAC5B,IAAIC,EACJ,OAAO,YAAaC,EAAM,CACxB,aAAaD,CAAO,EACpBA,EAAU,WAAW,IAAMF,EAAK,MAAM,KAAMG,CAAI,EAAGF,CAAI,CAC7D,CACG,CAGD,OAAO,iBAAiB,SAAUF,EAASD,EAAa,GAAG,CAAC,EAG5DA,GACF,CAAC"}