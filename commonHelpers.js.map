{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["const viewport = document.querySelector('.cover-section');\n\nfunction isInViewport(element) {\n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top < window.innerHeight &&\n    rect.left < window.innerWidth &&\n    rect.bottom > 0 &&\n    rect.right > 0\n  );\n}\n\nfunction checkScroll() {\n  if (isInViewport(viewport)) {\n    if (!viewport.classList.contains('scrolling')) {\n      console.log('Section is in viewport\".');\n    }\n    viewport.classList.add('scrolling');\n  } else {\n    if (viewport.classList.contains('scrolling')) {\n      console.log('Section is out of viewport\".');\n    }\n    viewport.classList.remove('scrolling');\n  }\n}\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n\nconst debouncedCheckScroll = debounce(checkScroll, 100);\nwindow.addEventListener('scroll', debouncedCheckScroll);\n\ncheckScroll();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Select all the <ul> elements with the class 'cover-list'\n  const coverLists = document.querySelectorAll('.cover-list li');\n\n  // Define the delay between each <ul>\n  const listDelay = 1000; // Adjust as needed\n\n  // Iterate over each <ul> and apply animation\n  coverLists.forEach((list, listIndex) => {\n    // Apply a delay to the <ul> to make sure lists appear sequentially\n    list.style.transitionDelay = `${listIndex * listDelay}ms`;\n    list.classList.add('show');\n\n    // Select all <li> elements within the current <ul>\n    const listItems = list.querySelectorAll('li');\n\n    listItems.forEach((item, itemIndex) => {\n      // Calculate delay for each <li> to appear sequentially within the <ul>\n      const itemDelay = 500; // Adjust as needed\n      item.style.transitionDelay = `${itemIndex * itemDelay}ms`;\n      item.classList.add('show');\n    });\n  });\n});\n"],"names":["viewport","isInViewport","element","rect","checkScroll","debounce","func","wait","timeout","args","debouncedCheckScroll","coverLists","listDelay","list","listIndex","item","itemIndex"],"mappings":"ssBAAA,MAAMA,EAAW,SAAS,cAAc,gBAAgB,EAExD,SAASC,EAAaC,EAAS,CAC7B,MAAMC,EAAOD,EAAQ,wBACrB,OACEC,EAAK,IAAM,OAAO,aAClBA,EAAK,KAAO,OAAO,YACnBA,EAAK,OAAS,GACdA,EAAK,MAAQ,CAEjB,CAEA,SAASC,GAAc,CACjBH,EAAaD,CAAQ,GAClBA,EAAS,UAAU,SAAS,WAAW,GAC1C,QAAQ,IAAI,0BAA0B,EAExCA,EAAS,UAAU,IAAI,WAAW,IAE9BA,EAAS,UAAU,SAAS,WAAW,GACzC,QAAQ,IAAI,8BAA8B,EAE5CA,EAAS,UAAU,OAAO,WAAW,EAEzC,CAEA,SAASK,EAASC,EAAMC,EAAM,CAC5B,IAAIC,EACJ,OAAO,YAAaC,EAAM,CACxB,aAAaD,CAAO,EACpBA,EAAU,WAAW,IAAMF,EAAK,MAAM,KAAMG,CAAI,EAAGF,CAAI,CAC3D,CACA,CAEA,MAAMG,EAAuBL,EAASD,EAAa,GAAG,EACtD,OAAO,iBAAiB,SAAUM,CAAoB,EAEtDN,IAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAElD,MAAMO,EAAa,SAAS,iBAAiB,gBAAgB,EAGvDC,EAAY,IAGlBD,EAAW,QAAQ,CAACE,EAAMC,IAAc,CAEtCD,EAAK,MAAM,gBAAkB,GAAGC,EAAYF,CAAS,KACrDC,EAAK,UAAU,IAAI,MAAM,EAGPA,EAAK,iBAAiB,IAAI,EAElC,QAAQ,CAACE,EAAMC,IAAc,CAGrCD,EAAK,MAAM,gBAAkB,GAAGC,EAAY,GAAS,KACrDD,EAAK,UAAU,IAAI,MAAM,CAC/B,CAAK,CACL,CAAG,CACH,CAAC"}