{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["const viewport = document.querySelector('.cover-section');\n\nfunction isInViewport(element) {\n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top < window.innerHeight &&\n    rect.left < window.innerWidth &&\n    rect.bottom > 0 &&\n    rect.right > 0\n  );\n}\n\nfunction checkScroll() {\n  if (isInViewport(viewport)) {\n    if (!viewport.classList.contains('scrolling')) {\n      console.log('Section is in viewport\".');\n    }\n    viewport.classList.add('scrolling');\n  } else {\n    if (viewport.classList.contains('scrolling')) {\n      console.log('Section is out of viewport\".');\n    }\n    viewport.classList.remove('scrolling');\n  }\n}\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n\nconst debouncedCheckScroll = debounce(checkScroll, 100);\nwindow.addEventListener('scroll', debouncedCheckScroll);\n\ncheckScroll();\n\nfunction addDesktopItems() {\n  const container = document.querySelector('.cover-section .cover-container');\n\n  if (!document.querySelector('.cover-list.desktop')) {\n    const newUl = document.createElement('ul');\n    newUl.classList.add('cover-list', 'desktop');\n\n    const newLi = document.createElement('li');\n    newLi.innerHTML = `\n        <picture class=\"cover-picture\">\n          <source srcset=\"./img/Rectangle-1-1x.jpg 1x, ./img/Rectangle-1-2x.jpg 2x\" media=\"(min-width: 1440px)\" />\n          <source srcset=\"./img/Rectangle-1-1x.jpg 1x, ./img/Rectangle-1-2x.jpg 2x\" media=\"(min-width: 768px)\" />\n          <source srcset=\"./img/Rectangle-1-1x.jpg 1x, ./img/Rectangle-1-2x.jpg 2x\" media=\"(max-width: 767px)\" />\n          <img src=\"./img/Rectangle-1-1x.jpg\" alt=\"Cover 1\" width=\"282\" class=\"cover-img\" />\n        </picture>\n      `;\n    newUl.appendChild(newLi);\n    const existingLists = container.querySelectorAll('.cover-list');\n    container.insertBefore(newUl, existingLists[0]);\n  }\n}\n\nfunction removeDesktopItems() {\n  const desktopList = document.querySelector('.cover-list.desktop');\n  if (desktopList) {\n    desktopList.remove();\n  }\n}\n\nfunction handleResize() {\n  if (window.innerWidth >= 1440) {\n    addDesktopItems();\n  } else {\n    removeDesktopItems();\n  }\n}\nwindow.addEventListener('load', handleResize);\nwindow.addEventListener('resize', handleResize);\n"],"names":["viewport","isInViewport","element","rect","checkScroll","debounce","func","wait","timeout","args","debouncedCheckScroll","addDesktopItems","container","newUl","newLi","existingLists","removeDesktopItems","desktopList","handleResize"],"mappings":"ssBAAA,MAAMA,EAAW,SAAS,cAAc,gBAAgB,EAExD,SAASC,EAAaC,EAAS,CAC7B,MAAMC,EAAOD,EAAQ,wBACrB,OACEC,EAAK,IAAM,OAAO,aAClBA,EAAK,KAAO,OAAO,YACnBA,EAAK,OAAS,GACdA,EAAK,MAAQ,CAEjB,CAEA,SAASC,GAAc,CACjBH,EAAaD,CAAQ,GAClBA,EAAS,UAAU,SAAS,WAAW,GAC1C,QAAQ,IAAI,0BAA0B,EAExCA,EAAS,UAAU,IAAI,WAAW,IAE9BA,EAAS,UAAU,SAAS,WAAW,GACzC,QAAQ,IAAI,8BAA8B,EAE5CA,EAAS,UAAU,OAAO,WAAW,EAEzC,CAEA,SAASK,EAASC,EAAMC,EAAM,CAC5B,IAAIC,EACJ,OAAO,YAAaC,EAAM,CACxB,aAAaD,CAAO,EACpBA,EAAU,WAAW,IAAMF,EAAK,MAAM,KAAMG,CAAI,EAAGF,CAAI,CAC3D,CACA,CAEA,MAAMG,EAAuBL,EAASD,EAAa,GAAG,EACtD,OAAO,iBAAiB,SAAUM,CAAoB,EAEtDN,IAEA,SAASO,GAAkB,CACzB,MAAMC,EAAY,SAAS,cAAc,iCAAiC,EAE1E,GAAI,CAAC,SAAS,cAAc,qBAAqB,EAAG,CAClD,MAAMC,EAAQ,SAAS,cAAc,IAAI,EACzCA,EAAM,UAAU,IAAI,aAAc,SAAS,EAE3C,MAAMC,EAAQ,SAAS,cAAc,IAAI,EACzCA,EAAM,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQlBD,EAAM,YAAYC,CAAK,EACvB,MAAMC,EAAgBH,EAAU,iBAAiB,aAAa,EAC9DA,EAAU,aAAaC,EAAOE,EAAc,CAAC,CAAC,CAC/C,CACH,CAEA,SAASC,GAAqB,CAC5B,MAAMC,EAAc,SAAS,cAAc,qBAAqB,EAC5DA,GACFA,EAAY,OAAM,CAEtB,CAEA,SAASC,GAAe,CAClB,OAAO,YAAc,KACvBP,IAEAK,GAEJ,CACA,OAAO,iBAAiB,OAAQE,CAAY,EAC5C,OAAO,iBAAiB,SAAUA,CAAY"}